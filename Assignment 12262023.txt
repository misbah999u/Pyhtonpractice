Assignment 12/26/2023

-> class Rectangle:
    def __init__(self, width, height):
        self._width = width
        self._height = height

    @property
    def width(self):
        return self._width

    @width.setter
    def width(self, width):
        if width <= 0:
            return ValueError('Width must be Positive')
        else:
            self._width = width

    @property
    def height(self):
        return self._height

    @height.setter
    def height(self, height):
        if height <= 0:
            return ValueError('Width must be Positive')
        else:
            self._height = height


   
    def __str__(self):
        return 'Rectangle: width:{0}, height:{1}'.format(self.width, self.height)

    def __repr__(self):
        return 'Rectangle({0},{1})'.format(self.width, self.height)

    def __eq__(self, other):
        if isinstance(other, Rectangle):
            return self.width == other.width and self.height == other.height
        else:
            return False

Solution: 
There are a couple of issues in your code:

In the setter methods for width and height, you're returning a ValueError object instead of raising it. You should use the raise statement to raise an exception.

In the height setter, you have a typo where you're returning a ValueError with the message 'Width must be Positive'. It should be 'Height must be Positive'.

class Rectangle:
    def __init__(self, width, height):
        self._width = width
        self._height = height

    @property
    def width(self):
        return self._width

    @width.setter
    def width(self, width):
        if width <= 0:
            raise ValueError('Width must be Positive')
        else:
            self._width = width

    @property
    def height(self):
        return self._height

    @height.setter
    def height(self, height):
        if height <= 0:
            raise ValueError('Height must be Positive')
        else:
            self._height = height

    def __str__(self):
        return 'Rectangle: width:{0}, height:{1}'.format(self.width, self.height)

    def __repr__(self):
        return 'Rectangle({0},{1})'.format(self.width, self.height)

    def __eq__(self, other):
        if isinstance(other, Rectangle):
            return self.width == other.width and self.height == other.height
        else:
            return False
