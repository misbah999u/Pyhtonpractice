LeetCode Challenge 18(AL&DS) 03/27/2024

-> A phrase is a palindrome if, after converting all uppercase letters into lowercase letters and removing all non-alphanumeric characters, it reads the same forward and backward. Alphanumeric characters include letters and numbers.

Given a string s, return true if it is a palindrome, or false otherwise.
Example 1:

Input: s = "A man, a plan, a canal: Panama"
Output: true
Explanation: "amanaplanacanalpanama" is a palindrome.
Example 2:

Input: s = "race a car"
Output: false
Explanation: "raceacar" is not a palindrome.
Example 3:

Input: s = " "
Output: true
Explanation: s is an empty string "" after removing non-alphanumeric characters.
Since an empty string reads the same forward and backward, it is a palindrome.
 

Constraints:

1 <= s.length <= 2 * 105
s consists only of printable ASCII characters.
Solution:
class Solution:
    def isPalindrome(self, s: str) -> bool:
        
        string=''

        for i in s:
            if i.isalnum():
                string+=i.lower()
            else:
                continue
        index_comp=(len(string)+1)//2
        for i in range(index_comp):
            if string[i]==string[len(string)-1-i]:
                continue
            else:
                return False
        return True


Link: https://leetcode.com/problems/valid-palindrome/solutions/4934010/challenge-18-al-ds/
Explanation: This code defines a class Solution with a method isPalindrome that checks if a given string s is a palindrome or not. A palindrome is a string that reads the same forwards and backwards.