LeetCode Challenge 15(AL&DS) 03/22/2024
-> You are given an integer array nums. You are initially positioned at the array's first index, and each element in the array represents your maximum jump length at that position.

Return true if you can reach the last index, or false otherwise.

 

Example 1:

Input: nums = [2,3,1,1,4]
Output: true
Explanation: Jump 1 step from index 0 to 1, then 3 steps to the last index.
Example 2:

Input: nums = [3,2,1,0,4]
Output: false
Explanation: You will always arrive at index 3 no matter what. Its maximum jump length is 0, which makes it impossible to reach the last index.
 

Constraints:

1 <= nums.length <= 104
0 <= nums[i] <= 105
Solution:
class Solution:
    def canJump(self, nums: List[int]) -> bool:

        cur_max = 0
        for i,num in enumerate(nums):
            if i <= cur_max:
                cur_max = max(cur_max, i + num)
        
        return cur_max >= len(nums) - 1
        
Link: https://leetcode.com/problems/jump-game/solutions/4911071/challenge-15-al-ds/
Explanation: This algorithm effectively determines whether it's possible to reach the end of the list by iteratively updating the maximum reachable position based on the maximum number of steps that can be taken from each position.