LeetCode Challenge33(AL&DS) 04/25/2024
-> Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.

 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]
 

Constraints:

1 <= strs.length <= 104
0 <= strs[i].length <= 100
strs[i] consists of lowercase English letters.
Solution: 
class Solution:
    def groupAnagrams(self, strs):
        grouped_anagrams = defaultdict(list)
        for word in strs:
            # Key function: Sort characters and concatenate to form a unique key
            key = ''.join(sorted(word))
            grouped_anagrams[key].append(word)
        return list(grouped_anagrams.values())
Link: https://leetcode.com/problems/group-anagrams/solutions/5089462/challenge-33-al-ds/
Explanation: In summary, this method efficiently groups anagrams together by sorting the characters of each word and using the sorted version as a key in a dictionary. This allows for quick identification and grouping of anagrams.

