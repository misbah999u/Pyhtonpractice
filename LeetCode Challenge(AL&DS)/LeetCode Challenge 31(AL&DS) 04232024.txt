LeetCode Challenge31(AL&DS) 04/23/2024
-> Given a pattern and a string s, find if s follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in s.

 

Example 1:

Input: pattern = "abba", s = "dog cat cat dog"
Output: true
Example 2:

Input: pattern = "abba", s = "dog cat cat fish"
Output: false
Example 3:

Input: pattern = "aaaa", s = "dog cat cat dog"
Output: false
 

Constraints:

1 <= pattern.length <= 300
pattern contains only lower-case English letters.
1 <= s.length <= 3000
s contains only lowercase English letters and spaces ' '.
s does not contain any leading or trailing spaces.
All the words in s are separated by a single space.
Solution:
class Solution:
    def wordPattern(self, pattern: str, s: str) -> bool:

        l = s.split(" ")

        if len(l)!=len(pattern):
            return False

        d ={}
        se=set()

        for i in range(len(pattern)):
            if pattern[i] in d:
                if d[pattern[i]]!=l[i]:
                    return False
            else:
                if l[i] not in se:
                    d[pattern[i]]=l[i]
                    se.add(l[i])
                else:
                    return False
        
        return True
Link: https://leetcode.com/problems/word-pattern/solutions/5089436/challenge-31-al-ds/
Explanation: In summary, this method checks if a given pattern matches a string of words by establishing a one-to-one mapping between characters in the pattern and words in the string, ensuring consistency and uniqueness of mappings.