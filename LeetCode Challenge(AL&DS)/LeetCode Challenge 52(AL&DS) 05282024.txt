LeetCode Challenge 52(AL&DS) 05/28/2024
->Given an integer x, return true if x is a 
palindrome
, and false otherwise.

 

Example 1:

Input: x = 121
Output: true
Explanation: 121 reads as 121 from left to right and from right to left.
Example 2:

Input: x = -121
Output: false
Explanation: From left to right, it reads -121. From right to left, it becomes 121-. Therefore it is not a palindrome.
Example 3:

Input: x = 10
Output: false
Explanation: Reads 01 from right to left. Therefore it is not a palindrome.
 

Constraints:

-231 <= x <= 231 - 1
 

Follow up: Could you solve it without converting the integer to a string?

Solution:class Solution(object):
    def isPalindrome(self, x):
        if x < 0 or (x != 0 and x % 10 == 0):
            return False

        half = 0
        while x > half:
            half = (half * 10) + (x % 10)
            x = x // 10

        return x == half or x == half // 10
Link: https://leetcode.com/problems/palindrome-number/solutions/5265112/challenge-52-al-ds/
Explanation: The `isPalindrome` function checks if an integer `x` is a palindrome without converting it to a string. It first returns `False` for negative numbers or if the number ends in zero (except for zero itself). It then reverses half of the digits of `x` and compares the reversed half with the remaining digits to determine if `x` is a palindrome.
