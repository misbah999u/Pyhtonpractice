Codility Challenge 01/23/2024	

-> An array A consisting of N integers is given. The dominator of array A is the value that occurs in more than half of the elements of A.

For example, consider array A such that

 A[0] = 3    A[1] = 4    A[2] =  3
 A[3] = 2    A[4] = 3    A[5] = -1
 A[6] = 3    A[7] = 3
The dominator of A is 3 because it occurs in 5 out of 8 elements of A (namely in those with indices 0, 2, 4, 6 and 7) and 5 is more than a half of 8.

Write a function

def solution(A)

that, given an array A consisting of N integers, returns index of any element of array A in which the dominator of A occurs. The function should return −1 if array A does not have a dominator.

For example, given array A such that

 A[0] = 3    A[1] = 4    A[2] =  3
 A[3] = 2    A[4] = 3    A[5] = -1
 A[6] = 3    A[7] = 3
the function may return 0, 2, 4, 6 or 7, as explained above.

Write an efficient algorithm for the following assumptions:

N is an integer within the range [0..100,000];
each element of array A is an integer within the range [−2,147,483,648..2,147,483,647].

Solution: 

def solution(A):
    n = len(A)

    if n == 0:
        return -1

    cand = -1
    count = 0

    for i in range(n):
        if count == 0:
            cand = A[i]
            count += 1
        else:
            if cand == A[i]:
                count += 1
            else:
                count -= 1

    count_cand = A.count(cand)
    if count_cand > n // 2:
        return A.index(cand)
    else:
        return -1

A = [3, 4, 3, 2, 3, -1, 3, 3]
result = solution(A)
print(result)


Link: https://app.codility.com/demo/results/training5HST5M-3NC/
Explanation: Once a candidate for the dominator is identified, the algorithm verifies if it indeed dominates the array by counting how many times it appears. If the candidate proves to be the dominator, the function returns the index of any occurrence where it is found. If not, the function returns -1. In the provided example, this could be an index like 0, 2, 4, 6, or 7.